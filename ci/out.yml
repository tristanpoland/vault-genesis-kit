# Debug: Input files: pipeline/base.yml settings.yml pipeline/base.yml pipeline/jobs/build-kit.yml pipeline/jobs/deploy.yml pipeline/jobs/prepare.yml pipeline/jobs/ship-prerelease.yml pipeline/jobs/ship-release.yml pipeline/jobs/spec-check.yml pipeline/jobs/spec-tests.yml pipeline/jobs/version-major.yml pipeline/jobs/version-minor.yml pipeline/jobs/version-patch.yml pipeline/resources/build.yml pipeline/resources/git-ci.yml pipeline/resources/git-latest-tag.yml pipeline/resources/git-main.yml pipeline/resources/git.yml pipeline/resources/github-prerelease.yml pipeline/resources/github.yml pipeline/resources/notify.yml pipeline/resources/release-notes.yml pipeline/resources/spec-check.yml pipeline/resources/version.yml
# File: pipeline/jobs/deploy.yml (Line: 4)
groups:
# File: pipeline/base.yml (Line: 87)
- jobs:
  - build-kit
  - spec-check
  - ship-prerelease
  - prepare
  - ship-release
  name: UNDEFINED_GRAB_meta.pipeline
# File: pipeline/base.yml (Line: 87)
- jobs:
  - major
  - minor
  - patch
  # File: pipeline/base.yml (Line: 94)
  name: versions
# File: pipeline/jobs/build-kit.yml (Line: 1)
jobs:
# File: pipeline/jobs/build-kit.yml (Line: 2)
- name: build-kit
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 7)
    - in_parallel:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      - get: version
        # File: pipeline/jobs/build-kit.yml (Line: 8)
        params:
          # File: pipeline/jobs/build-kit.yml (Line: 8)
          pre: rc
      # File: pipeline/jobs/build-kit.yml (Line: 9)
      - get: git
        # File: pipeline/jobs/build-kit.yml (Line: 9)
        trigger: true
      # File: pipeline/jobs/build-kit.yml (Line: 10)
      - get: git-ci
      # File: pipeline/jobs/build-kit.yml (Line: 11)
      - get: release-cache
    # File: pipeline/jobs/build-kit.yml (Line: 13)
    - file: git-ci/ci/tasks/build-kit.yml
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        KIT_SHORTNAME: UNDEFINED_GRAB_meta.kit
        VAULT_TOKEN: UNDEFINED_GRAB_meta.vault.token
        VAULT_URI: UNDEFINED_GRAB_meta.vault.url
      # File: pipeline/jobs/build-kit.yml (Line: 12)
      task: build-kit
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/build-kit.yml (Line: 21)
        acl: public-read
        # File: pipeline/jobs/build-kit.yml (Line: 20)
        file: build/*.tar.gz
      # File: pipeline/jobs/build-kit.yml (Line: 18)
      put: build
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/build-kit.yml (Line: 23)
        file: version/number
      # File: pipeline/jobs/build-kit.yml (Line: 22)
      put: version
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/build-kit.yml (Line: 21)
        acl: public-read
        # File: pipeline/jobs/build-kit.yml (Line: 28)
        content-type: application/json
        # File: pipeline/jobs/build-kit.yml (Line: 26)
        file: release-cache/release-lookup-cache.json
      # File: pipeline/jobs/build-kit.yml (Line: 24)
      put: release-cache
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/build-kit.yml (Line: 40)
        message: prerelease build for '$BUILD_JOB_NAME' failed.
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
    # File: pipeline/jobs/build-kit.yml (Line: 29)
    on_success:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/build-kit.yml (Line: 33)
        message: prerelease build for '$BUILD_JOB_NAME' succeeded.
        # File: pipeline/jobs/deploy.yml (Line: 9)
        ok: true
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
  # File: pipeline/jobs/build-kit.yml (Line: 4)
  serial: false
# File: pipeline/jobs/deploy.yml (Line: 2)
- name: deploy
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 7)
    - in_parallel:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      - get: version
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - spec-check
        - spec-tests
      # File: pipeline/jobs/deploy.yml (Line: 9)
      - get: build
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - spec-check
        - spec-tests
        # File: pipeline/jobs/build-kit.yml (Line: 9)
        trigger: true
      # File: pipeline/jobs/deploy.yml (Line: 8)
      - get: spec-check
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - spec-check
      # File: pipeline/jobs/build-kit.yml (Line: 9)
      - get: git
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - spec-check
        - spec-tests
      # File: pipeline/jobs/build-kit.yml (Line: 10)
      - get: git-ci
    # File: pipeline/jobs/deploy.yml (Line: 14)
    - file: git-ci/ci/tasks/deploy.yml
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        # File: pipeline/jobs/deploy.yml (Line: 16)
        .: (( inject meta.task_connectivity_params ))
        DEPLOY_ENV: "ci-"meta.iaas"-baseline"
        KIT_SHORTNAME: UNDEFINED_GRAB_meta.kit
        # File: pipeline/jobs/deploy.yml (Line: 22)
        SKIP_CLEAN: false
        # File: pipeline/jobs/deploy.yml (Line: 19)
        SKIP_FRESH: false
        # File: pipeline/jobs/deploy.yml (Line: 20)
        SKIP_REPLACE_SECRETS: false
        # File: pipeline/jobs/deploy.yml (Line: 21)
        SKIP_SMOKE_TESTS: false
      # File: pipeline/jobs/deploy.yml (Line: 13)
      task: test-deploy
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/deploy.yml (Line: 27)
        message: tests job '$BUILD_JOB_NAME' failed.
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
  # File: pipeline/jobs/deploy.yml (Line: 4)
  serial_groups:
  - deployment
# File: pipeline/jobs/prepare.yml (Line: 2)
- name: prepare
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 7)
    - in_parallel:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      - get: version
        # File: pipeline/jobs/build-kit.yml (Line: 8)
        params:
          # File: pipeline/jobs/ship-release.yml (Line: 8)
          bump: final
        passed: UNDEFINED_GRAB_meta.blocking_tests
      # File: pipeline/jobs/deploy.yml (Line: 8)
      - get: spec-check
        passed: UNDEFINED_GRAB_meta.blocking_tests
      # File: pipeline/jobs/build-kit.yml (Line: 9)
      - get: git
        passed: UNDEFINED_GRAB_meta.blocking_tests
        # File: pipeline/jobs/build-kit.yml (Line: 9)
        trigger: true
      # File: pipeline/jobs/build-kit.yml (Line: 10)
      - get: git-ci
      # File: pipeline/jobs/spec-tests.yml (Line: 12)
      - get: git-latest-tag
      # File: pipeline/jobs/ship-release.yml (Line: 11)
      - get: release-notes
    # File: pipeline/jobs/prepare.yml (Line: 15)
    - file: git-ci/ci/tasks/generate-release-notes.yml
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        GIT_EMAIL: UNDEFINED_GRAB_meta.git.email
        GIT_NAME: UNDEFINED_GRAB_meta.git.name
        KIT_SHORTNAME: UNDEFINED_GRAB_meta.kit
        RELEASE_NOTES_FILE: UNDEFINED_GRAB_meta.github.release_notes.file
        RELEASE_NOTES_WEB_URL: UNDEFINED_GRAB_meta.github.release_notes.edit
        VAULT_TOKEN: UNDEFINED_GRAB_meta.vault.token
        VAULT_URI: UNDEFINED_GRAB_meta.vault.url
      # File: pipeline/jobs/prepare.yml (Line: 14)
      task: generate-release-notes
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/prepare.yml (Line: 26)
        rebase: true
        # File: pipeline/jobs/prepare.yml (Line: 27)
        repository: release-notes
      # File: pipeline/jobs/prepare.yml (Line: 24)
      put: release-notes
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/prepare.yml (Line: 32)
        message: release candidate job 'pre' failed (which is unusual).
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
  # File: pipeline/jobs/ship-release.yml (Line: 4)
  serial: true
# File: pipeline/jobs/ship-prerelease.yml (Line: 2)
- name: ship-prerelease
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 7)
    - in_parallel:
      # File: pipeline/jobs/deploy.yml (Line: 9)
      - get: build
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      - get: version
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
      # File: pipeline/jobs/build-kit.yml (Line: 9)
      - get: git
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
      # File: pipeline/jobs/build-kit.yml (Line: 10)
      - get: git-ci
    # File: pipeline/jobs/ship-prerelease.yml (Line: 14)
    - file: git-ci/ci/tasks/prerelease.yml
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        DEVELOP_BRANCH: UNDEFINED_GRAB_meta.github.branch
        GIT_EMAIL: UNDEFINED_GRAB_meta.git.email
        GIT_NAME: UNDEFINED_GRAB_meta.git.name
        GITHUB_OWNER: UNDEFINED_GRAB_meta.github.owner
        KIT_SHORTNAME: UNDEFINED_GRAB_meta.kit
        # File: pipeline/jobs/ship-release.yml (Line: 30)
        NOTIFICATION_OUT: notifications
        # File: pipeline/jobs/ship-prerelease.yml (Line: 16)
        PRERELEASE: 1
        RELEASE_BRANCH: UNDEFINED_GRAB_meta.github.branch
        RELEASE_NOTES: UNDEFINED_GRAB_meta.github.release_notes.file
        # File: pipeline/jobs/ship-release.yml (Line: 28)
        RELEASE_ROOT: gh
      # File: pipeline/jobs/ship-prerelease.yml (Line: 13)
      task: ship-prerelease
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/ship-release.yml (Line: 43)
        body: gh/notes.md
        # File: pipeline/jobs/ship-prerelease.yml (Line: 32)
        commitish: gh/commit
        # File: pipeline/jobs/ship-release.yml (Line: 44)
        globs:
        - gh/artifacts/*
        # File: pipeline/jobs/ship-release.yml (Line: 41)
        name: gh/name
        # File: pipeline/jobs/ship-release.yml (Line: 37)
        tag: gh/tag
      # File: pipeline/jobs/ship-prerelease.yml (Line: 27)
      put: github-prerelease
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/deploy.yml (Line: 27)
        message: tests job '$BUILD_JOB_NAME' failed.
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
  # File: pipeline/jobs/build-kit.yml (Line: 4)
  serial: false
# File: pipeline/jobs/ship-release.yml (Line: 2)
- name: ship-release
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 7)
    - in_parallel:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      - get: version
        # File: pipeline/jobs/build-kit.yml (Line: 8)
        params:
          # File: pipeline/jobs/ship-release.yml (Line: 8)
          bump: final
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - prepare
        # File: pipeline/jobs/ship-release.yml (Line: 8)
        resource: version
      # File: pipeline/jobs/build-kit.yml (Line: 9)
      - get: git
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - prepare
      # File: pipeline/jobs/deploy.yml (Line: 8)
      - get: spec-check
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - prepare
        # File: pipeline/jobs/version-major.yml (Line: 6)
        trigger: false
      # File: pipeline/jobs/ship-release.yml (Line: 11)
      - get: release-notes
      # File: pipeline/jobs/build-kit.yml (Line: 11)
      - get: release-cache
      # File: pipeline/jobs/build-kit.yml (Line: 10)
      - get: git-ci
      # File: pipeline/jobs/ship-release.yml (Line: 14)
      - get: git-main
      # File: pipeline/jobs/spec-tests.yml (Line: 12)
      - get: git-latest-tag
    # File: pipeline/jobs/build-kit.yml (Line: 13)
    - file: git-ci/ci/tasks/build-kit.yml
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        KIT_SHORTNAME: UNDEFINED_GRAB_meta.kit
        VAULT_TOKEN: UNDEFINED_GRAB_meta.vault.token
        VAULT_URI: UNDEFINED_GRAB_meta.vault.url
      # File: pipeline/jobs/build-kit.yml (Line: 12)
      task: build-kit
    # File: pipeline/jobs/ship-release.yml (Line: 23)
    - file: git-ci/ci/tasks/release.yml
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        DEVELOP_BRANCH: UNDEFINED_GRAB_meta.github.branch
        GIT_EMAIL: UNDEFINED_GRAB_meta.git.email
        GIT_NAME: UNDEFINED_GRAB_meta.git.name
        GITHUB_OWNER: UNDEFINED_GRAB_meta.github.owner
        KIT_SHORTNAME: UNDEFINED_GRAB_meta.kit
        # File: pipeline/jobs/ship-release.yml (Line: 30)
        NOTIFICATION_OUT: notifications
        RELEASE_BRANCH: UNDEFINED_GRAB_meta.github.main-branch
        RELEASE_NOTES: UNDEFINED_GRAB_meta.github.release_notes.file
        # File: pipeline/jobs/ship-release.yml (Line: 28)
        RELEASE_ROOT: gh
      # File: pipeline/jobs/ship-release.yml (Line: 22)
      task: release
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/ship-release.yml (Line: 36)
        merge: false
        # File: pipeline/jobs/ship-release.yml (Line: 38)
        repository: git-main
        # File: pipeline/jobs/ship-release.yml (Line: 37)
        tag: gh/tag
      # File: pipeline/jobs/ship-release.yml (Line: 34)
      put: git-main
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/ship-release.yml (Line: 43)
        body: gh/notes.md
        # File: pipeline/jobs/ship-release.yml (Line: 44)
        globs:
        - gh/artifacts/*
        # File: pipeline/jobs/ship-release.yml (Line: 41)
        name: gh/name
        # File: pipeline/jobs/ship-release.yml (Line: 37)
        tag: gh/tag
      # File: pipeline/jobs/ship-release.yml (Line: 39)
      put: github
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/ship-release.yml (Line: 47)
        bump: patch
      # File: pipeline/jobs/build-kit.yml (Line: 22)
      put: version
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/ship-release.yml (Line: 51)
        file: notifications/message
        link: meta.github.uri"/releases"
        # File: pipeline/jobs/ship-release.yml (Line: 50)
        method: announce
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/ship-release.yml (Line: 64)
        message: release job '$BUILD_JOB_NAME' failed.
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
    # File: pipeline/jobs/build-kit.yml (Line: 29)
    on_success:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/ship-release.yml (Line: 57)
        message: release job '$BUILD_JOB_NAME' succeeded.
        # File: pipeline/jobs/deploy.yml (Line: 9)
        ok: true
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
  # File: pipeline/jobs/ship-release.yml (Line: 4)
  serial: true
# File: pipeline/jobs/spec-check.yml (Line: 2)
- name: spec-check
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 7)
    - in_parallel:
      # File: pipeline/jobs/deploy.yml (Line: 9)
      - get: build
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
        # File: pipeline/jobs/build-kit.yml (Line: 9)
        trigger: true
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      - get: version
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
      # File: pipeline/jobs/build-kit.yml (Line: 9)
      - get: git
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
      # File: pipeline/jobs/build-kit.yml (Line: 10)
      - get: git-ci
      # File: pipeline/jobs/spec-tests.yml (Line: 12)
      - get: git-latest-tag
    # File: pipeline/jobs/spec-check.yml (Line: 14)
    - file: git-ci/ci/tasks/spec-check.yml
      # File: pipeline/jobs/spec-check.yml (Line: 13)
      task: spec-check
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/build-kit.yml (Line: 21)
        acl: public-read
        # File: pipeline/jobs/spec-check.yml (Line: 17)
        file: spec-check/diff-*
      # File: pipeline/jobs/spec-check.yml (Line: 15)
      put: spec-check
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/deploy.yml (Line: 27)
        message: tests job '$BUILD_JOB_NAME' failed.
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
  # File: pipeline/jobs/build-kit.yml (Line: 4)
  serial: false
# File: pipeline/jobs/spec-tests.yml (Line: 2)
- name: spec-tests
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 7)
    - in_parallel:
      # File: pipeline/jobs/deploy.yml (Line: 9)
      - get: build
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
        # File: pipeline/jobs/build-kit.yml (Line: 9)
        trigger: true
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      - get: version
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
      # File: pipeline/jobs/build-kit.yml (Line: 9)
      - get: git
        # File: pipeline/jobs/deploy.yml (Line: 8)
        passed:
        - build-kit
      # File: pipeline/jobs/build-kit.yml (Line: 10)
      - get: git-ci
      # File: pipeline/jobs/spec-tests.yml (Line: 12)
      - get: git-latest-tag
    # File: pipeline/jobs/spec-tests.yml (Line: 15)
    - attempts: 2
      # File: pipeline/jobs/spec-tests.yml (Line: 14)
      file: git-ci/ci/tasks/spec-tests.yml
      # File: pipeline/jobs/spec-tests.yml (Line: 13)
      task: spec-tests
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/deploy.yml (Line: 27)
        message: tests job '$BUILD_JOB_NAME' failed.
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
  # File: pipeline/jobs/build-kit.yml (Line: 4)
  serial: false
# File: pipeline/jobs/version-major.yml (Line: 2)
- name: major
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - get: version
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        # File: pipeline/jobs/version-major.yml (Line: 6)
        bump: major
      # File: pipeline/jobs/version-major.yml (Line: 6)
      trigger: false
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/build-kit.yml (Line: 23)
        file: version/number
      # File: pipeline/jobs/build-kit.yml (Line: 22)
      put: version
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/version-major.yml (Line: 19)
        message: major version bump job '$BUILD_JOB_NAME' failed (which is unusual).
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
    # File: pipeline/jobs/build-kit.yml (Line: 29)
    on_success:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/version-major.yml (Line: 12)
        message: major version bump job '$BUILD_JOB_NAME' succeeded.
        # File: pipeline/jobs/deploy.yml (Line: 9)
        ok: true
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
# File: pipeline/jobs/version-minor.yml (Line: 2)
- name: minor
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - get: version
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        # File: pipeline/jobs/version-minor.yml (Line: 6)
        bump: minor
      # File: pipeline/jobs/version-major.yml (Line: 6)
      trigger: false
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/build-kit.yml (Line: 23)
        file: version/number
      # File: pipeline/jobs/build-kit.yml (Line: 22)
      put: version
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/version-minor.yml (Line: 19)
        message: minor version bump job '$BUILD_JOB_NAME' failed (which is unusual).
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
    # File: pipeline/jobs/build-kit.yml (Line: 29)
    on_success:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/version-minor.yml (Line: 12)
        message: minor version bump job '$BUILD_JOB_NAME' succeeded.
        # File: pipeline/jobs/deploy.yml (Line: 9)
        ok: true
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
# File: pipeline/jobs/version-patch.yml (Line: 2)
- name: patch
  # File: pipeline/jobs/build-kit.yml (Line: 5)
  plan:
  # File: pipeline/jobs/build-kit.yml (Line: 6)
  - do:
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - get: version
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        # File: pipeline/jobs/ship-release.yml (Line: 47)
        bump: patch
      # File: pipeline/jobs/version-major.yml (Line: 6)
      trigger: false
    # File: pipeline/jobs/build-kit.yml (Line: 8)
    - params:
        # File: pipeline/jobs/build-kit.yml (Line: 23)
        file: version/number
      # File: pipeline/jobs/build-kit.yml (Line: 22)
      put: version
    # File: pipeline/jobs/build-kit.yml (Line: 36)
    on_failure:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/version-patch.yml (Line: 19)
        message: patch version bump job '$BUILD_JOB_NAME' failed (which is unusual).
        # File: pipeline/jobs/ship-release.yml (Line: 10)
        ok: false
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
    # File: pipeline/jobs/build-kit.yml (Line: 29)
    on_success:
      # File: pipeline/jobs/build-kit.yml (Line: 8)
      params:
        link: UNDEFINED_GRAB_meta.shout.links.build
        # File: pipeline/jobs/version-patch.yml (Line: 12)
        message: patch version bump job '$BUILD_JOB_NAME' succeeded.
        # File: pipeline/jobs/deploy.yml (Line: 9)
        ok: true
        topic: meta.shout.topic"-"
      # File: pipeline/jobs/build-kit.yml (Line: 30)
      put: notify
  # File: pipeline/jobs/build-kit.yml (Line: 3)
  public: true
# File: pipeline/jobs/build-kit.yml (Line: 15)
meta:
  # File: pipeline/resources/spec-check.yml (Line: 5)
  aws:
    # File: pipeline/base.yml (Line: 46)
    access_key: (( param "Please set your AWS Access Key ID for your pipeline S3 Bucket"
      ))
    # File: pipeline/base.yml (Line: 44)
    bucket: genesis-pipeline
    # File: pipeline/base.yml (Line: 45)
    region_name: us-east-1
    # File: pipeline/base.yml (Line: 47)
    secret_key: (( param "Please set your AWS Secret Key ID for your pipeline S3 Bucket"
      ))
  # File: pipeline/base.yml (Line: 21)
  blocking_tests: []
  # File: settings.yml (Line: 12)
  bosh:
    # File: settings.yml (Line: 16)
    cacert: ((bosh.ca))
    # File: settings.yml (Line: 15)
    password: ((bosh.password))
    # File: settings.yml (Line: 13)
    uri: ((bosh.uri))
    # File: settings.yml (Line: 14)
    username: ((bosh.username))
  # File: settings.yml (Line: 18)
  credhub:
    # File: settings.yml (Line: 21)
    password: ((bosh.credhub_password))
    # File: settings.yml (Line: 19)
    url: ((bosh.credhub_url))
    # File: settings.yml (Line: 20)
    username: ((bosh.credhub_username))
  # File: settings.yml (Line: 8)
  exposed: false
  # File: pipeline/jobs/build-kit.yml (Line: 2)
  git:
    # File: pipeline/base.yml (Line: 36)
    email: ((github.email))
    # File: pipeline/base.yml (Line: 37)
    name: ((github.name))
  # File: pipeline/resources/release-notes.yml (Line: 6)
  github:
    # File: pipeline/base.yml (Line: 55)
    access_token: (( param "Please generate a Personal Access Token to be used for
      creating github releases (do you have a ci-bot?)" ))
    # File: pipeline/base.yml (Line: 53)
    branch: master
    # File: pipeline/jobs/ship-release.yml (Line: 27)
    main-branch: main
    # File: pipeline/base.yml (Line: 51)
    owner: (( param "Please specify the name of the user / organization that owns
      the Github repository" ))
    # File: pipeline/base.yml (Line: 54)
    private_key: (( param "Please generate an SSH Deployment Key for this repo and
      specify it here" ))
    # File: pipeline/resources/release-notes.yml (Line: 6)
    release_notes:
      # File: pipeline/jobs/ship-release.yml (Line: 27)
      branch: main
      # File: pipeline/base.yml (Line: 61)
      edit: (( concat "https://github.com/" meta.github.owner "/"  meta.github.release_notes.repo
        "/edit/"  meta.github.release_notes.branch "/" meta.github.release_notes.file
        ))
      file: meta.name"-release-notes.md"
      # File: pipeline/base.yml (Line: 57)
      repo: ci-release-notes
      # File: pipeline/base.yml (Line: 60)
      uri: (( concat "git@github.com:"  meta.github.owner "/" meta.github.release_notes.repo
        ))
    repo: UNDEFINED_PARAM_Please specify the name of the Github repository
    uri: "git@github.com:"meta.github.owner"/"meta.github.repo
  # File: settings.yml (Line: 7)
  iaas: vsphere
  # File: pipeline/resources/notify.yml (Line: 3)
  image:
    # File: pipeline/base.yml (Line: 40)
    name: ((image/genesis.url))
    # File: pipeline/base.yml (Line: 41)
    tag: ((image/genesis.tag))
  # File: settings.yml (Line: 10)
  initial_version: 2.1.0
  kit: UNDEFINED_PARAM_Which kit is this pipeline for?
  name: meta.kit"-genesis-kit"
  pipeline: UNDEFINED_GRAB_meta.name
  release: meta.kit"GenesisKit"
  # File: pipeline/jobs/build-kit.yml (Line: 32)
  shout:
    # File: pipeline/jobs/build-kit.yml (Line: 35)
    links:
      # File: pipeline/base.yml (Line: 76)
      build: (( concat meta.shout.links.pipeline "/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        ))
      # File: pipeline/base.yml (Line: 75)
      pipeline: (( concat meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME"
        ))
    # File: pipeline/base.yml (Line: 69)
    metadata:
      # File: pipeline/base.yml (Line: 71)
      build-job-name: $BUILD_JOB_NAME
      # File: pipeline/base.yml (Line: 72)
      build-pipeline-name: $BUILD_PIPELINE_NAME
      # File: pipeline/base.yml (Line: 70)
      build-team-name: $BUILD_TEAM_NAME
    password: UNDEFINED_PARAM_Please specify the Shout! operations password
    topic: meta.name"-pipeline"
    url: UNDEFINED_PARAM_Please specify the Shout! endpoint
    username: UNDEFINED_PARAM_Please specify the Shout! operations username
  target: UNDEFINED_PARAM_Please identify the name of the target Concourse CI
  # File: pipeline/jobs/deploy.yml (Line: 16)
  task_connectivity_params:
    GIT_EMAIL: UNDEFINED_GRAB_meta.git.email
    GIT_NAME: UNDEFINED_GRAB_meta.git.name
    INFRASTRUCTURE: UNDEFINED_GRAB_meta.iaas
    VAULT_TOKEN: UNDEFINED_GRAB_meta.vault.token
    VAULT_URI: UNDEFINED_GRAB_meta.vault.url
  # File: settings.yml (Line: 44)
  upstream:
    # File: settings.yml (Line: 45)
    bosh_releases:
    # File: settings.yml (Line: 46)
    - name: safe
      # File: settings.yml (Line: 49)
      path: manifests/releases/safe.yml
      # File: settings.yml (Line: 48)
      repository: cloudfoundry-community/safe-boshrelease
      # File: settings.yml (Line: 47)
      type: bosh-io-release
    # File: settings.yml (Line: 49)
    manifest:
      # File: pipeline/base.yml (Line: 27)
      org: cloudfoundry
      package: null
      path: UNDEFINED_GRAB_meta.upstream.manifest.package
      # File: pipeline/base.yml (Line: 28)
      repo: (( concat meta.upstream.manifest.org "/" meta.upstream.manifest.package
        ))
      url: "https://github.com/"meta.upstream.manifest.repo".git"
  url: UNDEFINED_PARAM_Please specify the full url of the target Concourse CI
  # File: pipeline/jobs/build-kit.yml (Line: 16)
  vault:
    token: UNDEFINED_PARAM_Please provide a Vault Token
    url: UNDEFINED_PARAM_Please provide the address of your Vault
  # File: settings.yml (Line: 9)
  version_file: version
# File: pipeline/resources/notify.yml (Line: 1)
resource_types:
# File: pipeline/resources/notify.yml (Line: 2)
- name: shout-notification
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    # File: pipeline/resources/notify.yml (Line: 5)
    repository: huntprod/shout-resource
  # File: pipeline/resources/notify.yml (Line: 3)
  type: docker-image
# File: pipeline/resources/release-notes.yml (Line: 1)
resources:
# File: pipeline/jobs/build-kit.yml (Line: 2)
- name: build
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    access_key_id: UNDEFINED_GRAB_meta.aws.access_key
    bucket: UNDEFINED_GRAB_meta.aws.bucket
    # File: pipeline/resources/spec-check.yml (Line: 5)
    endpoint: (( grab meta.aws.endpoint || ~ ))
    regexp: meta.name"/build/(.*)\.tar.gz"
    region_name: UNDEFINED_GRAB_meta.aws.region_name
    secret_access_key: UNDEFINED_GRAB_meta.aws.secret_key
    # File: pipeline/resources/spec-check.yml (Line: 6)
    skip_ssl_verification: (( grab meta.aws.insecure || false ))
  # File: pipeline/resources/spec-check.yml (Line: 3)
  type: s3
# File: pipeline/resources/release-notes.yml (Line: 4)
- check_every: 1h
  # File: pipeline/resources/git-ci.yml (Line: 2)
  name: git-ci
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    # File: pipeline/resources/git-ci.yml (Line: 7)
    branch: (( grab meta.github.ci-branch || meta.github.branch ))
    # File: pipeline/resources/release-notes.yml (Line: 10)
    disable_ci_skip: true
    # File: pipeline/resources/release-notes.yml (Line: 9)
    paths:
    - ci/*
    private_key: UNDEFINED_GRAB_meta.github.private_key
    # File: pipeline/resources/git-ci.yml (Line: 6)
    uri: (( grab meta.github.ci-uri    || meta.github.uri))
  # File: pipeline/resources/release-notes.yml (Line: 3)
  type: git
# File: pipeline/resources/release-notes.yml (Line: 4)
- check_every: 1h
  # File: pipeline/resources/git-latest-tag.yml (Line: 2)
  name: git-latest-tag
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    branch: UNDEFINED_GRAB_meta.github.branch
    # File: pipeline/resources/release-notes.yml (Line: 10)
    disable_ci_skip: true
    private_key: UNDEFINED_GRAB_meta.github.private_key
    # File: pipeline/resources/git-latest-tag.yml (Line: 9)
    tag_regex: ^v[0-9\.]*$
    uri: UNDEFINED_GRAB_meta.github.uri
  # File: pipeline/resources/release-notes.yml (Line: 3)
  type: git
# File: pipeline/resources/release-notes.yml (Line: 4)
- check_every: 1h
  # File: pipeline/resources/git-main.yml (Line: 2)
  name: git-main
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    branch: UNDEFINED_GRAB_meta.github.main-branch
    private_key: UNDEFINED_GRAB_meta.github.private_key
    uri: UNDEFINED_GRAB_meta.github.uri
  # File: pipeline/resources/release-notes.yml (Line: 3)
  type: git
# File: pipeline/resources/release-notes.yml (Line: 4)
- check_every: 1h
  # File: pipeline/jobs/ship-release.yml (Line: 33)
  name: git
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    branch: UNDEFINED_GRAB_meta.github.branch
    # File: pipeline/resources/git.yml (Line: 10)
    commit_filter:
      # File: pipeline/resources/git.yml (Line: 11)
      exclude:
      - ^\[ci\] release v
      # File: pipeline/resources/git.yml (Line: 13)
      - '^WIP:'
    # File: pipeline/resources/git.yml (Line: 9)
    ignore_paths:
    - ci
    private_key: UNDEFINED_GRAB_meta.github.private_key
    uri: UNDEFINED_GRAB_meta.github.uri
  # File: pipeline/resources/release-notes.yml (Line: 3)
  type: git
# File: pipeline/resources/github-prerelease.yml (Line: 2)
- name: github-prerelease
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    access_token: UNDEFINED_GRAB_meta.github.access_token
    owner: UNDEFINED_GRAB_meta.github.owner
    # File: pipeline/resources/github-prerelease.yml (Line: 8)
    pre_release: true
    # File: pipeline/resources/github-prerelease.yml (Line: 9)
    release: false
    repository: UNDEFINED_GRAB_meta.github.repo
  # File: pipeline/resources/github-prerelease.yml (Line: 3)
  type: github-release
# File: pipeline/resources/github-prerelease.yml (Line: 2)
- name: github
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    access_token: UNDEFINED_GRAB_meta.github.access_token
    owner: UNDEFINED_GRAB_meta.github.owner
    repository: UNDEFINED_GRAB_meta.github.repo
  # File: pipeline/resources/github-prerelease.yml (Line: 3)
  type: github-release
# File: pipeline/resources/notify.yml (Line: 8)
- name: notify
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    password: UNDEFINED_GRAB_meta.shout.password
    topic: UNDEFINED_GRAB_meta.shout.topic
    url: UNDEFINED_GRAB_meta.shout.url
    username: UNDEFINED_GRAB_meta.shout.username
  # File: pipeline/resources/notify.yml (Line: 9)
  type: shout-notification
# File: pipeline/resources/release-notes.yml (Line: 4)
- check_every: 1h
  # File: pipeline/resources/release-notes.yml (Line: 2)
  name: release-notes
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    branch: UNDEFINED_GRAB_meta.github.release_notes.branch
    # File: pipeline/resources/release-notes.yml (Line: 10)
    disable_ci_skip: true
    # File: pipeline/resources/release-notes.yml (Line: 9)
    paths:
    - UNDEFINED_GRAB_meta.github.release_notes.file
    # File: pipeline/resources/release-notes.yml (Line: 8)
    private_key: (( grab meta.github.release_notes.private_key || meta.github.private_key
      ))
    uri: UNDEFINED_GRAB_meta.github.release_notes.uri
  # File: pipeline/resources/release-notes.yml (Line: 3)
  type: git
# File: pipeline/jobs/spec-check.yml (Line: 2)
- name: spec-check
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    access_key_id: UNDEFINED_GRAB_meta.aws.access_key
    bucket: UNDEFINED_GRAB_meta.aws.bucket
    # File: pipeline/resources/spec-check.yml (Line: 5)
    endpoint: (( grab meta.aws.endpoint || ~ ))
    regexp: meta.name"/spec-check/diff-(.*)"
    region_name: UNDEFINED_GRAB_meta.aws.region_name
    secret_access_key: UNDEFINED_GRAB_meta.aws.secret_key
    # File: pipeline/resources/spec-check.yml (Line: 6)
    skip_ssl_verification: (( grab meta.aws.insecure || false ))
  # File: pipeline/resources/spec-check.yml (Line: 3)
  type: s3
# File: pipeline/resources/version.yml (Line: 2)
- name: version
  # File: pipeline/resources/release-notes.yml (Line: 1)
  source:
    access_key_id: UNDEFINED_GRAB_meta.aws.access_key
    bucket: UNDEFINED_GRAB_meta.aws.bucket
    # File: pipeline/resources/version.yml (Line: 5)
    driver: s3
    # File: pipeline/resources/spec-check.yml (Line: 5)
    endpoint: (( grab meta.aws.endpoint || ~ ))
    # File: pipeline/resources/version.yml (Line: 13)
    initial_version: (( grab meta.initial_version || "0.0.1" ))
    key: meta.name"/version"
    region_name: UNDEFINED_GRAB_meta.aws.region_name
    secret_access_key: UNDEFINED_GRAB_meta.aws.secret_key
    # File: pipeline/resources/spec-check.yml (Line: 6)
    skip_ssl_verification: (( grab meta.aws.insecure || false ))
  # File: pipeline/resources/version.yml (Line: 3)
  type: semver

